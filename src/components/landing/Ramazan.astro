<div
  class="flex justify-between max-w-4xl mx-auto mb-2 border-b border-gray-700"
>
<div class="flex justify-start gap-2">
  <span>🌐</span>
  <select id="citySelect" name="city" class="flex bg-transparent items-right justify-right mb-2 text-sm dark:text-white">
    <option value="Istanbul">İstanbul</option>
    <option value="Adana">Adana</option>
    <option value="Adiyaman">Adıyaman</option>
    <option value="Afyonkarahisar">Afyonkarahisar</option>
    <option value="Agri">Ağrı</option>
    <option value="Aksaray">Aksaray</option>
    <option value="Amasya">Amasya</option>
    <option value="Ankara">Ankara</option>
    <option value="Antalya">Antalya</option>
    <option value="Ardahan">Ardahan</option>
    <option value="Artvin">Artvin</option>
    <option value="Aydin">Aydın</option>
    <option value="Balikesir">Balıkesir</option>
    <option value="Bartin">Bartın</option>
    <option value="Batman">Batman</option>
    <option value="Bayburt">Bayburt</option>
    <option value="Bilecik">Bilecik</option>
    <option value="Bingol">Bingöl</option>
    <option value="Bitlis">Bitlis</option>
    <option value="Bolu">Bolu</option>
    <option value="Burdur">Burdur</option>
    <option value="Bursa">Bursa</option>
    <option value="Canakkale">Çanakkale</option>
    <option value="Cankiri">Çankırı</option>
    <option value="Corum">Çorum</option>
    <option value="Denizli">Denizli</option>
    <option value="Diyarbakir">Diyarbakır</option>
    <option value="Duzce">Düzce</option>
    <option value="Edirne">Edirne</option>
    <option value="Elazig">Elazığ</option>
    <option value="Erzincan">Erzincan</option>
    <option value="Erzurum">Erzurum</option>
    <option value="Eskisehir">Eskişehir</option>
    <option value="Gaziantep">Gaziantep</option>
    <option value="Giresun">Giresun</option>
    <option value="Gumushane">Gümüşhane</option>
    <option value="Hakkari">Hakkâri</option>
    <option value="Hatay">Hatay</option>
    <option value="Igdir">Iğdır</option>
    <option value="Isparta">Isparta</option>
    <option value="Izmir">İzmir</option>
    <option value="Kahramanmaras">Kahramanmaraş</option>
    <option value="Karabuk">Karabük</option>
    <option value="Karaman">Karaman</option>
    <option value="Kars">Kars</option>
    <option value="Kastamonu">Kastamonu</option>
    <option value="Kayseri">Kayseri</option>
    <option value="Kirikkale">Kırıkkale</option>
    <option value="Kirklareli">Kırklareli</option>
    <option value="Kirsehir">Kırşehir</option>
    <option value="Kilis">Kilis</option>
    <option value="Kocaeli">Kocaeli</option>
    <option value="Konya">Konya</option>
    <option value="Kutahya">Kütahya</option>
    <option value="Malatya">Malatya</option>
    <option value="Manisa">Manisa</option>
    <option value="Mardin">Mardin</option>
    <option value="Mersin">Mersin</option>
    <option value="Mugla">Muğla</option>
    <option value="Mus">Muş</option>
    <option value="Nevsehir">Nevşehir</option>
    <option value="Nigde">Niğde</option>
    <option value="Ordu">Ordu</option>
    <option value="Osmaniye">Osmaniye</option>
    <option value="Rize">Rize</option>
    <option value="Sakarya">Sakarya</option>
    <option value="Samsun">Samsun</option>
    <option value="Siirt">Siirt</option>
    <option value="Sinop">Sinop</option>
    <option value="Sivas">Sivas</option>
    <option value="Sanliurfa">Şanlıurfa</option>
    <option value="Sirnak">Şırnak</option>
    <option value="Tekirdag">Tekirdağ</option>
    <option value="Tokat">Tokat</option>
    <option value="Trabzon">Trabzon</option>
    <option value="Tunceli">Tunceli</option>
    <option value="Usak">Uşak</option>
    <option value="Van">Van</option>
    <option value="Yalova">Yalova</option>
    <option value="Yozgat">Yozgat</option>
    <option value="Zonguldak">Zonguldak</option>

  </select>
</div>


  <div
    id="currentTime"
    class="flex items-right justify-right mb-2 dark:text-white"
  >
  </div>
  <div class="flex items-left justify-left mb-2 text-sm dark:text-white">
    🗓️ &nbsp; <span class="text-sm dark:text-white" id="currentDateWithoutYear"
    ></span>
  </div>
</div>
<div
  id="remainingToIftarContainer"
  class="max-w-4xl mx-auto rounded-md bg-orange-50 p-4 dark:bg-gray-800"
>
  <div class="rounded-md bg-orange-50 p-4 dark:bg-gray-800">
    <div class="flex items-center justify-center">
      <div
        id="remainingToIftar"
        class="text-4xl font-medium text-orange-800 dark:text-orange-200"
      >
      </div>
    </div>
  </div>
</div>
<div
  id="remainingToImsakContainer"
  class="max-w-4xl mx-auto rounded-md bg-blue-50 p-4 dark:bg-gray-800 hidden"
>
  <div class="rounded-md bg-blue-50 p-4 dark:bg-gray-800">
    <div class="flex items-center justify-center">
      <div
        id="remainingToImsak"
        class="text-4xl font-medium text-blue-800 dark:text-blue-200"
      >
      </div>
    </div>
  </div>
</div>
<div class="mt-6 max-w-4xl mx-auto">
  <div class="bg-white dark:bg-gray-700 shadow-lg rounded-lg overflow-hidden">
    <div class="px-4 py-5 sm:p-6">
      <h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white">
        İmsak ve İftar Vakitleri
      </h3>
      <div class="mt-2 max-w-xl text-sm text-gray-500 dark:text-gray-400"></div>
      <div class="mt-5">
        <div
          id="imsakContainer"
          class="rounded-md bg-blue-50 p-4 dark:bg-gray-800"
        >
          <div class="flex items-center justify-between">
            <div class="text-sm font-medium text-blue-800 dark:text-blue-200">
              🌙 &nbsp; İmsak Vakti
            </div>
            <div
              class="text-lg font-semibold text-blue-900 dark:text-blue-300"
              id="imsakTime"
            >
            </div>
          </div>
        </div>
        <div
          id="iftarContainer"
          class="mt-3 rounded-md bg-orange-50 p-4 dark:bg-gray-800"
        >
          <div class="flex items-center justify-between">
            <div
              class="text-sm font-medium text-orange-800 dark:text-orange-200"
            >
              🕌 &nbsp; İftar Vakti
            </div>
            <div
              class="text-lg font-semibold text-orange-900 dark:text-orange-300"
              id="iftarTime"
            >
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="max-w-4xl mx-auto mt-6">
  <article
    class="bg-white dark:bg-gray-700 shadow-lg rounded-lg overflow-hidden"
  >
    <div class="px-4 py-5 sm:p-6">
      <h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white">
        Günün Ayeti
      </h3>
      <div class="mt-5">
        <div class="mt-3 rounded-md bg-orange-50 p-4 dark:bg-gray-800">
          <div
            id="gununAyeti"
            class="text-sm italic text-gray-900 dark:text-white"
          >
          </div>
          <span
            id="gununAyetiSure"
            class="text-sm italic text-orange-900 dark:text-red-300"
            ></span
          >
        </div>
      </div>
    </div>
  </article>
</div>
<div
  id="installModal"
  class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50 backdrop-blur-sm"
>
  <div class="flex items-center justify-center min-h-screen">
    <div
      role="dialog"
      aria-modal="true"
      aria-labelledby="modalTitle"
      class="relative mx-auto p-5 w-full max-w-md shadow-xl rounded-md bg-white dark:bg-gray-700 transition duration-300 ease-in-out"
    >
      <div class="text-center">
        <h3
          id="modalTitle"
          class="text-lg leading-6 font-medium text-gray-900 dark:text-white"
        >
          Uygulamamızı Yükleyin
        </h3>
        <div class="mt-2 px-7 py-3">
          <p class="text-sm text-gray-500 dark:text-gray-200">
            Uygulama olarak kullanmanız çok daha efektif olacaktır.
          </p>
        </div>
        <div class="mt-4 flex justify-center gap-4">
          <button
            id="confirmInstall"
            class="px-4 py-2 bg-orange-500 text-white text-base font-medium rounded-md shadow-sm hover:bg-orange-800 focus:outline-none focus:ring-2 focus:ring-orange-500 transition duration-150 ease-in-out"
          >
            Yükle
          </button>
          <button
            id="cancelInstall"
            class="px-4 py-2 bg-white text-blue-700 text-base font-medium rounded-md shadow-sm hover:bg-blue-100 focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-150 ease-in-out"
          >
            Sonra
          </button>
        </div>
      </div>
      <div class="absolute top-0 right-0 pt-4 pr-4">
        <button
          id="closeModal"
          aria-label="Close"
          class="text-gray-400 hover:text-gray-500 dark:hover:text-gray-300 focus:outline-none focus:ring-2 focus:ring-indigo-500"
        >
          <svg
            class="h-6 w-6"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            aria-hidden="true"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>
</div>

<footer
  class="max-w-4xl mx-auto flex justify-between items-center mt-12 text-sm text-gray-500 dark:text-gray-400"
>
<p>© 2024 created by <a target="_blank" href="https://www.linkedin.com/in/busrayalcinkaya/" class="text-pink-300 underline decoration-dashed italic">BYK</a></p>
<div>
  <button
    id="themeToggle"
    class="py-2 px-4 text-white rounded bg-gray-50 hover:bg-gray-50 dark:hover:bg-gray-800 hover:text-gray-900 dark:bg-gray-800 transition duration-300 ease-in-out"
  ></button>
</div>
</footer>

<script>
document.addEventListener("DOMContentLoaded", function () {
  const isSafari = () => /Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor) && !/Chrome|Chromium/.test(navigator.userAgent);
  const shouldDisplayInstallPrompt = () => !window.navigator.standalone;
  let cityData = {};

  const addInstallPromptForSafari = () => {
    if (isSafari() && shouldDisplayInstallPrompt()) {
      const container = document.createElement("div");
      container.className = "max-w-4xl mx-auto flex justify-center items-center mt-12 text-sm text-gray-500 dark:text-gray-400";
      container.innerHTML = `<p>Uygulamamızı; Paylaş -> Ana Ekrana ekle -> Ekle adımlarını takip ederek indirebilirsiniz.</p>`;
      document.body.appendChild(container);
    }
  };

  addInstallPromptForSafari();

  const themeToggle = document.getElementById("themeToggle");
  const citySelect = document.getElementById("citySelect");
  const imsakTimeEl = document.getElementById("imsakTime");
  const iftarTimeEl = document.getElementById("iftarTime");
  const currentDateEl = document.getElementById("currentDateWithoutYear");
  const currentTimeEl = document.getElementById("currentTime");
  const imsakContainer = document.getElementById("imsakContainer");
  const iftarContainer = document.getElementById("iftarContainer");
  const remainingToImsakEl = document.getElementById("remainingToImsak");
  const remainingToIftarEl = document.getElementById("remainingToIftar");
  
  // Theme toggle
  themeToggle.addEventListener("click", () => {
    document.documentElement.classList.toggle("dark");
    themeToggle.textContent = document.documentElement.classList.contains("dark") ? "🌞" : "🌜";
  });

  const loadCityData = (city) => {
    fetch(`/cities/${city}.json`)
      .then((response) => response.json())
      .then((data) => {
        cityData = data;
        updatePrayerTimes();
      })
      .catch((error) => console.error('Error loading city data:', error));
  };

  const updatePrayerTimes = () => {
    const now = new Date();
    // Adjust for Istanbul's timezone: UTC+3
    now.setHours(now.getHours() + 3 - now.getTimezoneOffset() / 60);
    const dateString = now.toISOString().split('T')[0];

    if (cityData[dateString]) {
      const { imsak, iftar } = cityData[dateString];
      imsakTimeEl.textContent = imsak;
      iftarTimeEl.textContent = iftar;
      // Update remaining time displays
      updateRemainingTime(now, imsak, iftar);
    }
  };

  const updateRemainingTime = (now, imsak, iftar) => {
    const imsakDate = new Date(now.toISOString().split('T')[0] + 'T' + imsak);
    const iftarDate = new Date(now.toISOString().split('T')[0] + 'T' + iftar);
    let remainingToImsak = imsakDate - now;
    let remainingToIftar = iftarDate - now;

    if (remainingToImsak < 0) {
      remainingToImsak += 86400000; // Add a day in milliseconds
    }
    if (remainingToIftar < 0) {
      remainingToIftar += 86400000;
    }

    remainingToImsakEl.textContent = formatTime(remainingToImsak);
    remainingToIftarEl.textContent = formatTime(remainingToIftar);

    imsakContainer.style.display = remainingToImsak <= remainingToIftar ? 'block' : 'none';
    iftarContainer.style.display = remainingToIftar < remainingToImsak ? 'block' : 'none';
  };

  const formatTime = (ms) => {
    const hours = Math.floor(ms / (1000 * 60 * 60));
    const minutes = Math.floor((ms % (1000 * 60 * 60)) / (1000 * 60));
    const seconds = Math.floor((ms % (1000 * 60)) / 1000);
    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
  };

  citySelect.addEventListener('change', (event) => {
    loadCityData(event.target.value);
  });

  // Load initial city data
  loadCityData(citySelect.value);

  setInterval(() => {
    updatePrayerTimes();
  }, 1000); // Update every second to keep countdown accurate
});
</script>
